{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/all-info-product/all-info-product.component.ts","webpack:///src/app/all-info-product/all-info-product.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/characteristics-info-product/characteristics-info-product.component.ts","webpack:///src/app/characteristics-info-product/characteristics-info-product.component.html","webpack:///src/app/comments-info-product/comments-info-product.component.ts","webpack:///src/app/comments-info-product/comments-info-product.component.html","webpack:///src/app/guards/profile.guard.ts","webpack:///src/app/guards/signup.guard.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/photo-info-product/photo-info-product.component.ts","webpack:///src/app/photo-info-product/photo-info-product.component.html","webpack:///src/app/product-details/product-details.component.ts","webpack:///src/app/product-details/product-details.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/respond-popup/respond-popup.component.ts","webpack:///src/app/respond-popup/respond-popup.component.html","webpack:///src/app/responds-list/responds-list.component.ts","webpack:///src/app/responds-list/responds-list.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/cart.service.ts","webpack:///src/app/services/comments.service.ts","webpack:///src/app/services/general.service.ts","webpack:///src/app/services/ngprogress.service.ts","webpack:///src/app/services/products.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/to-order/to-order.component.ts","webpack:///src/app/to-order/to-order.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AllInfoProductComponent","route","productsService","cartService","getProduct","addIdAfterReloading","node$","subscribe","n","product","hasId","_id","addToCart","addToCartEvent","addId","setAddedId","size","all","getProductFromLocalStorage","item","selector","templateUrl","styleUrls","routes","path","component","children","data","canActivate","AppRoutingNodule","forRoot","imports","AppComponent","AppModule","declarations","providers","bootstrap","toggleCartVisible","CartComponent","faMinus","faPlus","faCartPlus","items","sum","getFinallySum","increaseQuantity","reduceQuantity","removeFromCart","removeFromCartEvent","removeId","emit","CharacteristicsInfoProductComponent","node","CommentsInfoProductComponent","commentsService","authService","ngprogressService","comments","rating","respondPopupVisible","commentFormControl","required","nameFormControl","emailFormControl","email","matcher","setValue","getAuthStateFromLocalStorage","$event","newValue","getComments","error","console","log","Object","length","loadComments","comment","name","isAuth","ngProgressStart","userId","productId","username","text","value","doComment","ngProgressComplete","doCommentEvent","commentId","onRate","ProfileGuard","auth","router","next","state","observer","navigate","providedIn","SignupGuard","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","HeaderComponent","generalService","authVisible","cartVisible","passwordFormControl","minLength","observeForAddToCart","observeForRemoveFromCart","observeForDoCommentEvent","addToCartChanged$","cartCouter","undefined","doCommentChanged$","toggleAuthVisible","removeFromCartChanged$","password","unsetError","user","token","signIn","setUser","setError","message","PhotoInfoProductComponent","imageIndex","ProductDetailsComponent","title","price","discountPrice","imageUrl","quantity","navigateItems","active","getActiveTab","params","addNode","url","snapshot","firstChild","childPath","toggleTabActive","navigateItem","ProductListComponent","products","pageSize","pageIndex","categories","loadProducts","getProducts","array","loadCategories","getCategories","event","ProfileComponent","RespondPopupComponent","toggleVisible","respond","doRespond","toggleVisibleEmit","RespondsListComponent","responds","AuthService","http","isAuthorized","httpOptions","headers","post","localStorage","setItem","JSON","stringify","parse","getItem","CartService","cartProducts","Set","addToCartSubject$","prod","removeFromCartSubject$","asObservable","orderQuantity","addToLocalStorage","identicElementsCounter","calcSum","push","has","add","delete","refreshLocalStorage","filter","i","CommentsService","doCommentSubject$","GeneralService","error$","NgprogressService","ngProgress","progressRef","ref","start","complete","ProductsService","get","pipe","SignupComponent","signUp","ToOrderComponent","formBuilder","checkoutForm","group","customerData","warn","reset","order","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../services/products.service';\nimport { CartService } from '../services/cart.service';\n\n@Component({\n  selector: 'app-all-info-product',\n  templateUrl: './all-info-product.component.html',\n  styleUrls: ['./all-info-product.component.css']\n})\nexport class AllInfoProductComponent implements OnInit {\n\n  product;\n\n  constructor(\n   private route: ActivatedRoute,\n   private productsService: ProductsService,\n   public cartService: CartService,\n  ) { }\n\n  ngOnInit() {\n    this.getProduct();\n    this.addIdAfterReloading();\n  }\n  getProduct() {\n    this.productsService.node$.subscribe(n => this.product = n);\n  }\n  addToCart(product) {\n    if (!this.cartService.hasId(product._id)) {\n      this.cartService.addToCart(product);\n      this.cartService.addToCartEvent(product);\n    }\n    this.cartService.addId(product._id);\n  }\n  addToCartInit(product) {\n    this.cartService.addToCartEvent(product);\n  }\n  addIdAfterReloading() {\n    if (!this.cartService.setAddedId.size) {\n      const all = this.cartService.getProductFromLocalStorage();\n      for (const item of all) {\n        this.cartService.addId(item._id);\n      }\n    }\n  }\n}\n","<div *ngIf=\"product\" class=\"image-wrapper\">\n  <img [attr.src]=\"product?.imageUrl\" width=\"500\" height=\"auto\" alt=\"image\">\n  <div class=\"info\">\n    <p *ngIf=\"product.quantity > 10; else ending\" class=\"available\">\n      <mat-icon>done</mat-icon> Є в наявності\n    </p>\n    <ul class=\"info-actions\">\n      <li class=\"price\" class=\"mat-h1\">{{product.price}} ₴</li>\n      <li class=\"mat-h1\">{{product.discountPrice}} ₴</li>\n      <li>\n        <button mat-flat-button color=\"primary\"\n                (click)=\"addToCart(product)\" *ngIf=\"!cartService.hasId(product._id); else added\">\n          Купити<mat-icon>add_shopping_cart</mat-icon>\n        </button>\n      </li>\n      <li>\n        <button mat-flat-button color=\"primary\">\n          <mat-icon>favorite_border</mat-icon>\n        </button>\n      </li>\n    </ul>\n  </div>\n</div>\n      <!--<div *ngIf=\"product\">-->\n<!--    <img [attr.src]=\"product?.imageUrl\" width=\"400\" height=\"auto\" alt=\"\">-->\n<!--    <div class=\"details-dashboard\">-->\n<!--        <p *ngIf=\"product.quantity > 10; else ending\" class=\"available\">-->\n<!--            <fa-icon [icon] = \"faCloud\"></fa-icon> Є в наявності-->\n<!--        </p>-->\n<!--        <div class=\"actions\">-->\n<!--            <div class=\"price-badge\" *ngIf=\"product.discountPrice\">-->\n<!--                <h2 class=\"text-danger m-0\">{{product.discountPrice}} ₴</h2>-->\n<!--            </div>-->\n<!--            <div class=\"price-badge\" *ngIf=\"!product.discountPrice\">-->\n<!--               <h2 class=\"text-danger m-0\">{{product.price}} ₴</h2>-->\n<!--            </div>-->\n<!--            <div *ngIf=\"product.discountPrice\" class=\"price-info\">-->\n<!--                <h4 class=\"text-muted\">{{product.price}} ₴</h4>-->\n<!--            </div>-->\n<!--            <div class=\"buttons-badge\">-->\n<!--                <button (click)=\"addToCart(product)\" *ngIf=\"!cartService.hasId(product._id); else added\" >-->\n<!--                    <fa-icon [icon]=\"faCartPlus\"></fa-icon> Купити-->\n<!--                </button>-->\n<!--                <button class=\" btn add-to-favorites\">-->\n<!--                    <fa-icon [icon]=\"faHeart\"></fa-icon>-->\n<!--                </button>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--    </div>-->\n<!--</div>-->\n\n<ng-template #ending>\n    <p class=\"noavailable\">Закінчується</p>\n</ng-template>\n<ng-template #added>\n    <button mat-flat-button color=\"primary\" (click)=\"addToCartInit('product')\">Товар вже в кошику</button>\n  </ng-template>\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductDetailsComponent } from './product-details/product-details.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { ToOrderComponent } from './to-order/to-order.component';\r\nimport { AllInfoProductComponent } from './all-info-product/all-info-product.component';\r\nimport { CharacteristicsInfoProductComponent } from './characteristics-info-product/characteristics-info-product.component';\r\nimport { PhotoInfoProductComponent } from './photo-info-product/photo-info-product.component';\r\nimport { CommentsInfoProductComponent } from './comments-info-product/comments-info-product.component';\r\nimport {SignupComponent} from './signup/signup.component';\r\nimport {SignupGuard} from './guards/signup.guard';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {ProfileGuard} from './guards/profile.guard';\r\n\r\nconst routes: Routes = [\r\n    {path: '', component: ProductListComponent},\r\n    {path: 'products/:id', component: ProductDetailsComponent, children: [\r\n        {path: '', component: AllInfoProductComponent, data: {path: ''}},\r\n        {path: 'characteristics', component: CharacteristicsInfoProductComponent, data: {path: 'characteristics'}},\r\n        {path: 'photo', component: PhotoInfoProductComponent, data: {path: 'photo'}},\r\n        {path: 'comments', component: CommentsInfoProductComponent, data: {path: 'comments'}},\r\n    ]},\r\n    {path: 'cart', component: CartComponent},\r\n    {path: 'signup', component: SignupComponent, canActivate: [SignupGuard]},\r\n    {path: 'order', component: ToOrderComponent},\r\n  {path: 'profile', component: ProfileComponent, canActivate: [ProfileGuard]}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingNodule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n}\n","<app-header></app-header>\n<ng-progress [color]=\"'#e67e22'\"\n             [thick]=\"true\"\n             [trickleSpeed]=\"500\"\n             [spinner]=\"false\"></ng-progress>\n<div class=\"container-fluid mt-5 p-5\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgProgressModule } from 'ngx-progressbar';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { CartComponent } from './cart/cart.component';\nimport { ToOrderComponent } from './to-order/to-order.component';\n\nimport { AllInfoProductComponent } from './all-info-product/all-info-product.component';\nimport { AppRoutingNodule } from './app-routing.module';\nimport { CharacteristicsInfoProductComponent } from './characteristics-info-product/characteristics-info-product.component';\nimport { PhotoInfoProductComponent } from './photo-info-product/photo-info-product.component';\nimport { CommentsInfoProductComponent } from './comments-info-product/comments-info-product.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatBadgeModule,\n  MatButtonModule, MatCardModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule, MatMenuModule, MatPaginatorModule, MatProgressSpinnerModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { SignupComponent } from './signup/signup.component';\nimport {AuthService} from './services/auth.service';\nimport { ProfileComponent } from './profile/profile.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTableModule} from '@angular/material/table';\nimport {RatingModule} from 'ng-starrating';\nimport { RespondPopupComponent } from './respond-popup/respond-popup.component';\nimport { RespondsListComponent } from './responds-list/responds-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ProductListComponent,\n    ProductDetailsComponent,\n    CartComponent,\n    ToOrderComponent,\n    AllInfoProductComponent,\n    CharacteristicsInfoProductComponent,\n    PhotoInfoProductComponent,\n    CommentsInfoProductComponent,\n    SignupComponent,\n    ProfileComponent,\n    RespondPopupComponent,\n    RespondsListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    RouterModule,\n    AppRoutingNodule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatBadgeModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    NgProgressModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatListModule,\n    MatTableModule,\n    RatingModule\n  ],\n  providers: [\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { CartService } from '../services/cart.service';\nimport { faCartPlus, faMinus, faPlus} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\n\nexport class CartComponent implements OnInit {\n\n  @Output() toggleCartVisible = new EventEmitter();\n\n  faMinus = faMinus;\n  faPlus = faPlus;\n  faCartPlus = faCartPlus;\n  items = [];\n  sum = 0;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit() {\n    this.items = this.cartService.getProductFromLocalStorage();\n    this.getFinallySum();\n  }\n  increaseQuantity(item) {\n    this.cartService.increaseQuantity(item);\n    this.items = this.cartService.getProductFromLocalStorage();\n    this.sum = 0;\n    this.getFinallySum();\n  }\n  reduceQuantity(item) {\n    this.cartService.reduceQuantity(item);\n    this.items = this.cartService.getProductFromLocalStorage();\n    this.sum = 0;\n    this.getFinallySum();\n  }\n  removeFromCart(product) {\n    this.cartService.removeFromCart(product);\n    this.items = this.cartService.getProductFromLocalStorage();\n    this.cartService.removeFromCartEvent(product);\n    this.cartService.removeId(product._id);\n    this.toggleCartVisible.emit();\n    this.sum = 0;\n    this.getFinallySum();\n  }\n  getFinallySum() {\n    for (const item of this.items) {\n      this.sum = item.sum + this.sum;\n    }\n  }\n}\n","<div class=\"cart-container\">\n    <div class=\"modal-window\">\n        <a class=\"modal-window-header-button\" (click)=\"toggleCartVisible.emit()\">\n            <h3 class=\"mat-h1\">Кошик</h3>\n            <span class=\"burger\"></span>\n        </a>\n        <div class=\"products-list-wrapper\" *ngIf=\"items.length > 0; else noProducts\">\n          <ul class=\"cart-product-list\">\n            <li class=\"cart-product-list-item\" *ngFor=\"let item of items\">\n              <button (click)=\"removeFromCart(item)\" class=\"mini-button-close-wraper\">\n                <span class=\"mini-button-close\"></span>\n              </button>\n              <img [src]=\"item.imageUrl\" alt=\"image\" width=\"150\" height=\"150\">\n              <div class=\"card-body-right\">\n                <a mat-button color=\"primary\" class=\"product-title\" routerLink=\"/products/{{item._id}}\" routerLinkActive=\"router-link-active\">\n                  {{item.title}}\n                </a>\n                <div class=\"card-body-right-control-panel\">\n                  <div class=\"price-badge\">\n                    <h5 class=\"mat-h1 m-0\" *ngIf=\"!item.discountPrice\">{{item.price}} грн</h5>\n                    <h5 class=\"mat-h1 m-0\" *ngIf=\"item.discountPrice\">{{item.discountPrice}} грн</h5>\n                  </div>\n                  <div class=\"quantity-badge\">\n                    <button class=\"quantity-badge-button\" [disabled]=\"item.orderQuantity == 1\" (click)=\"reduceQuantity(item)\">\n                      <fa-icon [icon]=\"faMinus\"></fa-icon>\n                    </button>\n                    <input type=\"text\" class=\"quantity-badge-input\" [value]=\"item.orderQuantity\">\n                    <button class=\"quantity-badge-button\" (click)=\"increaseQuantity(item)\">\n                      <fa-icon [icon]=\"faPlus\"></fa-icon>\n                    </button>\n                  </div>\n                  <div class=\"sum-badge\">\n                    <small class=\"sum-badge-title mat-h3\">Сума</small>\n                    <h5 class=\"mat-h2\">{{item.sum}}</h5>\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n          <div class=\"modal-window-footer\">\n            <a mat-flat-button color=\"primary\" routerLink=\"/order\" (click)=\"toggleCartVisible.emit()\">До оплати</a>\n            <div class=\"mat-h1\">Загалом {{sum}}</div>\n          </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #noProducts>\n   <span class=\"cart-empty\">\n       <fa-icon [icon]=\"faCartPlus\" class=\"cart-empty-icon\"></fa-icon>\n        <p class=\"text-center text-muted pl-3 cart-empty-text\">Кошик порожній</p>\n   </span>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../services/products.service';\n\n@Component({\n  selector: 'app-characteristics-info-product',\n  templateUrl: './characteristics-info-product.component.html',\n  styleUrls: ['./characteristics-info-product.component.css']\n})\nexport class CharacteristicsInfoProductComponent implements OnInit {\n\n  product;\n  constructor(\n    private productsService: ProductsService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.getProduct();\n  }\n  getProduct() {\n    this.productsService.node$.subscribe(node => this.product = node);\n  }\n}\n","<div *ngIf=\"product\">\n  <p class=\"mat-h1 product-title\">Характеристики {{product.title}}</p>\n  <table class=\"table\">\n    <tbody>\n      <tr *ngFor=\"let item of product.characteristics\">\n        <td class=\"mat-h3\">{{item.title}}</td>\n        <td class=\"mat-h3\">{{item.value}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {StarRatingComponent} from 'ng-starrating';\nimport {CommentsService} from '../services/comments.service';\nimport {Comment} from '../models/Comment';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MyErrorStateMatcher} from '../header/header.component';\nimport {ProductsService} from '../services/products.service';\nimport {AuthService} from '../services/auth.service';\nimport {NgprogressService} from '../services/ngprogress.service';\n\n\n@Component({\n  selector: 'app-comments-info-product',\n  templateUrl: './comments-info-product.component.html',\n  styleUrls: ['./comments-info-product.component.css']\n})\nexport class CommentsInfoProductComponent implements OnInit {\n\n  comments: Comment[] = [];\n  comment: Comment;\n  product;\n  error: string;\n  rating = 0;\n  respondPopupVisible = false;\n  commentId;\n\n  commentFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    private commentsService: CommentsService,\n    private productsService: ProductsService,\n    private authService: AuthService,\n    private ngprogressService: NgprogressService,\n  ) { }\n\n  ngOnInit() {\n    this.getProduct();\n    this.emailFormControl.setValue(this.authService.getAuthStateFromLocalStorage().email);\n  }\n  onRate($event: {oldValue: number, newValue: number, starRating: StarRatingComponent}) {\n    this.rating = $event.newValue;\n  }\n\n  loadComments(id) {\n      this.commentsService.getComments(id)\n        .subscribe(\n          (comments) => {\n            this.comments = comments;\n          },\n          (error) => {\n            this.error = error;\n            console.log(this.error);\n          }\n        );\n  }\n  getProduct() {\n    this.productsService.node$.subscribe(node => {\n      this.product = node;\n      if (Object.keys(this.product).length) {\n        console.log(this.product._id);\n        this.loadComments(this.product._id);\n      }\n    });\n  }\n  doComment(comment, name) {\n    if (this.authService.getAuthStateFromLocalStorage().isAuth) {\n      this.ngprogressService.ngProgressStart();\n      this.comment = {\n        userId: this.authService.getAuthStateFromLocalStorage().userId || '',\n        productId: this.product._id,\n        username: name,\n        text: comment,\n        email: this.authService.getAuthStateFromLocalStorage().email || this.emailFormControl.value,\n        rating: this.rating,\n      };\n      this.commentsService.doComment(this.comment)\n        .subscribe(data => {\n          this.loadComments(this.product._id);\n          this.commentFormControl.setValue('');\n          this.nameFormControl.setValue('');\n          this.rating = 0;\n          this.ngprogressService.ngProgressComplete();\n        });\n    } else {\n      this.commentsService.doCommentEvent();\n    }\n  }\n  toggleVisible(commentId?) {\n    this.commentId = commentId;\n    this.respondPopupVisible = !this.respondPopupVisible;\n  }\n}\n","<app-respond-popup *ngIf=\"respondPopupVisible\" [commentId]=\"commentId\" (toggleVisible)=\"toggleVisible()\"></app-respond-popup>\r\n<div class=\"comments-wrapper\">\r\n  <div class=\"comment-body\">\r\n    <div>\r\n      <star-rating [value]=\"rating\" [totalstars]=\"5\" [checkedcolor]=\"'gold'\" [uncheckedcolor]=\"'black'\" [size]=\"'40px'\" [readonly]=\"false\" (rate)=\"onRate($event)\"></star-rating>\r\n    </div>\r\n    <div>\r\n      <form>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваш відгук</mat-label>\r\n          <input matInput type=\"text\" [formControl]=\"commentFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"commentFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваше ім'я</mat-label>\r\n          <input matInput type=\"text\" [formControl]=\"nameFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"nameFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваш email</mat-label>\r\n          <input matInput type=\"email\" [readonly]=\"\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n            Вкажіть правильний email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button mat-flat-button color=\"primary\" class=\"send-button\" [disabled]=\"commentFormControl.hasError('required') ||\r\n            nameFormControl.hasError('required') || emailFormControl.hasError('email')\r\n              || emailFormControl.hasError('required')\" (click)=\"doComment(commentFormControl.value, nameFormControl.value)\">Відправити</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <h1 class=\"mat-h1\">Усі відгуки</h1>\r\n  <ul class=\"comments\">\r\n    <li class=\"comments-item\" *ngFor=\"let comment of comments\">\r\n      <div class=\"comments-item-header\">\r\n        <div class=\"row\">\r\n          <mat-icon color=\"primary\">shopping_cart</mat-icon>\r\n          <h2 class=\"mat-h2\">{{comment.username}}</h2>\r\n        </div>\r\n        <div class=\"row\">\r\n          <p class=\"mat-h3 comment-date\">{{comment.date | date}}</p>\r\n          <mat-icon class=\"link-pointer\">report</mat-icon>\r\n        </div>\r\n      </div>\r\n      <div class=\"comments-item-content\">\r\n        <div>\r\n          <star-rating [value]=\"comment.rating\" [totalstars]=\"5\" [checkedcolor]=\"'gold'\" [uncheckedcolor]=\"'black'\" [size]=\"'40px'\" [readonly]=\"true\" (rate)=\"onRate($event)\"></star-rating>\r\n        </div>\r\n        <div>\r\n          <p class=\"mat-h3\">{{comment.text}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"comments-item-footer\">\r\n        <div class=\"row\" (click)=\"toggleVisible(comment._id)\">\r\n          <mat-icon class=\"link-pointer\">redo</mat-icon>\r\n          <p class=\"comment-answer link-pointer\">Відповісти</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <mat-icon class=\"link-pointer\">thumb_up</mat-icon>\r\n          <p class=\"likes-counter\">{{comment.likesCounter}}</p>\r\n          <mat-icon class=\"link-pointer\">thumb_down</mat-icon>\r\n          <p class=\"likes-counter\">{{comment.dislikesCounter}}</p>\r\n        </div>\r\n      </div>\r\n      <app-responds-list *ngIf=\"comment.responds.length\" [responds]=\"comment.responds\"></app-responds-list>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return new Observable<boolean>(observer => {\n      if(this.auth.getAuthStateFromLocalStorage().isAuth) {\n        observer.next(true);\n      } else {\n        observer.next(false);\n        this.router.navigate(['/signup']);\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return new Observable<boolean>(observer => {\n      if (this.authService.getAuthStateFromLocalStorage().isAuth) {\n        observer.next(false);\n        this.router.navigate(['/']);\n      } else {\n        observer.next(true);\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport {FormBuilder, FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { CartService } from '../services/cart.service';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {User} from '../models/User';\nimport {GeneralService} from '../services/general.service';\nimport {Router} from '@angular/router';\nimport {CommentsService} from '../services/comments.service';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  authVisible = false;\n  cartVisible = false;\n  error = null;\n  cartCouter;\n  isAuth = false;\n  constructor(\n    public auth: AuthService,\n    private cartService: CartService,\n    public generalService: GeneralService,\n    private router: Router,\n    private commentsService: CommentsService\n  ) {}\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  passwordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5)\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n  ngOnInit() {\n    this.observeForAddToCart();\n    this.observeForRemoveFromCart();\n    this.observeForDoCommentEvent();\n    this.isAuth = this.auth.getAuthStateFromLocalStorage().isAuth;\n  }\n\n  observeForAddToCart() {\n    this.cartService.addToCartChanged$.subscribe(data => {\n      this.cartCouter = this.cartService.getProductFromLocalStorage().length;\n      if (data !== undefined) {\n       this.toggleCartVisible();\n      }\n    });\n  }\n  observeForDoCommentEvent() {\n    this.commentsService.doCommentChanged$.subscribe(data => {\n      if (data === true) {\n        this.toggleAuthVisible();\n      }\n    });\n  }\n  observeForRemoveFromCart() {\n    this.cartService.removeFromCartChanged$.subscribe(data => {\n      this.cartCouter = this.cartService.getProductFromLocalStorage().length;\n      if (data !== undefined) {\n       this.toggleCartVisible();\n      }\n    });\n  }\n  toggleAuthVisible() {\n    this.authVisible = !this.authVisible;\n  }\n  toggleCartVisible() {\n    this.cartVisible = !this.cartVisible;\n  }\n  signIn(email, password) {\n    this.generalService.unsetError();\n    let user: User = {\n      email,\n      password,\n      userId: null,\n      token: null\n    };\n    this.auth.signIn(user)\n      .subscribe(data => {\n          user = {\n            email,\n            password: null,\n            userId: data.userId,\n            token: data.token\n          };\n          this.auth.setUser(user);\n          this.toggleAuthVisible();\n          this.isAuth = this.auth.getAuthStateFromLocalStorage();\n      },\n      error => {\n        this.generalService.setError();\n        this.error = error.error.message;\n      });\n  }\n}\n","<header class=\"header\">\n  <app-cart *ngIf=\"cartVisible\" (toggleCartVisible)=\"toggleCartVisible()\"></app-cart>\n  <div class=\"modal-window-background\" *ngIf=\"authVisible\">\n    <div class=\"modal-window\">\n      <div class=\"modal-window-header\">\n        <h3>Вхід</h3>\n        <button class=\"modal-window-header-button\" (click)=\"toggleAuthVisible();\" aria-label=\"Закрити модальне вікно\">\n          <span class=\"burger\"></span>\n        </button>\n      </div>\n      <div class=\"modal-window-body\">\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Email</mat-label>\n            <input matInput [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\n            <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n              Вкажіть правильний email\n            </mat-error>\n            <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Пароль</mat-label>\n            <input matInput type=\"password\" [formControl]=\"passwordFormControl\" [errorStateMatcher]=\"matcher\">\n            <mat-error *ngIf=\"passwordFormControl.hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n            <mat-error *ngIf=\"passwordFormControl.hasError('minlength')\">\n              Пароль дуже <strong>короткий</strong>\n            </mat-error>\n          </mat-form-field>\n          <mat-error *ngIf=\"generalService.getErrorState() | async\">\n            {{error}}\n          </mat-error>\n          <button mat-flat-button color=\"primary\"\n                  [disabled]=\"passwordFormControl.hasError('minlength') || passwordFormControl.hasError('required')\n                || emailFormControl.hasError('required') || emailFormControl.hasError('email')\"\n                  (click)=\"signIn(emailFormControl.value, passwordFormControl.value)\">Увійти</button>\n        </form>\n        <a routerLink=\"signup\" routerLinkActive=\"router-link-active\" class=\"signup\" (click)=\"toggleAuthVisible()\">Зареєструватися</a>\n      </div>\n    </div>\n  </div>\n\n  <mat-toolbar color=\"primary\" class=\"toolbar\">\n    <button mat-button routerLink=\"/\">\n      <mat-icon>accessibility_new</mat-icon>\n      <span>My Application</span>\n    </button>\n    <span class=\"fill-remaining-space\"></span>\n\n    <button mat-icon-button (click)=\"toggleCartVisible()\">\n      <mat-icon\n        [matBadge]=\"cartCouter\"\n        matBadgePosition=\"above after\"\n        matBadgeColor=\"warn\">add_shopping_cart\n      </mat-icon>\n    </button>\n\n    <button mat-icon-button>\n      <mat-icon>bookmark</mat-icon>\n    </button>\n\n    <button mat-button routerLink=\"/profile\" *ngIf=\"isAuth; else login\">\n      <mat-icon>account_circle</mat-icon>\n      <span>Особистий кабінет</span>\n    </button>\n  </mat-toolbar>\n</header>\n\n<ng-template #login>\n  <button mat-icon-button (click)=\"toggleAuthVisible()\">\n    <mat-icon>account_circle</mat-icon>\n  </button>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {ProductsService} from '../services/products.service';\n\n@Component({\n  selector: 'app-photo-info-product',\n  templateUrl: './photo-info-product.component.html',\n  styleUrls: ['./photo-info-product.component.css']\n})\nexport class PhotoInfoProductComponent implements OnInit {\n\n  product;\n  imageIndex = 0;\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit() {\n    this.getProduct();\n  }\n  getProduct() {\n    this.productsService.node$.subscribe(node => this.product = node);\n  }\n\n}\n","<div *ngIf=\"product\">\n  <div class=\"products-wrapper\">\n    <div *ngFor=\"let item of product.images\" class=\"image-wrapper\">\n      <img [src]=\"item\" alt=\"image\" width=\"100%\" height=\"auto\">\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { ProductsService } from '../services/products.service';\nimport {Product} from '../models/Product';\nimport {NgprogressService} from '../services/ngprogress.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\n\nexport class ProductDetailsComponent implements OnInit {\n\n  public product: Product = {\n    _id: null,\n    title: null,\n    price: null,\n    discountPrice: null,\n    imageUrl: null,\n    quantity: null\n  };\n  navigateItems = [\n    {\n      id: 1,\n      title: 'Усе про товар',\n      path: '/',\n      active: false\n    },\n    {\n      id: 2,\n      title: 'Характеристики',\n      path: 'characteristics',\n      active: false\n    },\n    {\n      id: 3,\n      title: 'Фото',\n      path: 'photo',\n      active: false\n    },\n    {\n      id: 4,\n      title: 'Відгуки',\n      path: 'comments',\n      active: false\n    }\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private productsService: ProductsService,\n    private ngprogressService: NgprogressService\n  ) { }\n\n  ngOnInit() {\n    this.getProduct();\n    this.getActiveTab();\n  }\n  getProduct() {\n    this.ngprogressService.ngProgressStart();\n    this.route.params.subscribe(params => {\n      const id = params.id;\n      this.productsService.getProduct(id).subscribe(data => {\n        this.product = data;\n        this.productsService.addNode(data);\n        this.ngprogressService.ngProgressComplete();\n      });\n    });\n  }\n  getActiveTab() {\n    this.route.url.subscribe(() => {\n      console.log(this.route.snapshot.firstChild.data);\n      const childPath = this.route.snapshot.firstChild.data;\n      if (childPath.path === '') {\n        this.toggleTabActive(1);\n      }\n      if (childPath.path === 'characteristics') {\n        this.toggleTabActive(2);\n      }\n      if (childPath.path === 'photo') {\n        this.toggleTabActive(3);\n      }\n      if (childPath.path === 'comments') {\n        this.toggleTabActive(4);\n      }\n    });\n  }\n  toggleTabActive(id) {\n    for (const navigateItem of this.navigateItems) {\n      navigateItem.id === id ? navigateItem.active = true : navigateItem.active = false;\n    }\n  }\n}\n","<div *ngIf=\"product\">\n    <div>\n        <h1 class=\"mat-headline product-title\">{{product.title}}</h1>\n        <ul class=\"actions\">\n            <li *ngFor=\"let item of navigateItems\" class=\"actions-item\">\n                <a routerLink =\"/products/{{product._id}}/{{item.path}}\" routerLinkActive=\"router-link-active\"\n                    class=\"actions-item-link\" [class.active]=\"item.active\" (click)=\"toggleTabActive(item.id)\">{{item.title}}</a>\n            </li>\n        </ul>\n        <router-outlet></router-outlet>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../services/cart.service';\nimport { ProductsService } from '../services/products.service';\nimport { Product } from '../models/Product';\nimport {PageEvent} from '@angular/material/paginator';\nimport {NgprogressService} from '../services/ngprogress.service';\n\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\n\nexport class ProductListComponent implements OnInit {\n\n  products: Product[] = [];\n  length;\n  pageSize = 10;\n  pageIndex = 0;\n  pageEvent: PageEvent;\n  categories = [];\n\n  constructor(\n    private productsService: ProductsService,\n    public cartService: CartService,\n    private ngprogressService: NgprogressService) { }\n\n  ngOnInit() {\n    this.loadProducts(this.pageSize, this.pageIndex);\n    this.addIdAfterReloading();\n  }\n\n  loadProducts(pageSize, pageIndex) {\n    this.ngprogressService.ngProgressComplete();\n    this.ngprogressService.ngProgressStart();\n    this.productsService.getProducts(pageSize, pageIndex)\n      .subscribe(data => {\n        this.products = data.array;\n        this.loadCategories();\n        this.length = data.length;\n        this.ngprogressService.ngProgressComplete();\n      });\n  }\n  loadCategories() {\n    this.productsService.getCategories()\n      .subscribe( categories => {\n        this.categories = categories;\n      });\n  }\n  addToCart(product) {\n    if (!this.cartService.hasId(product._id)) {\n      this.cartService.addToCart(product);\n      this.cartService.addToCartEvent(product);\n    }\n    this.cartService.addId(product._id);\n  }\n  addToCartInit(product) {\n    this.cartService.addToCartEvent(product);\n  }\n  addIdAfterReloading() {\n    if (!this.cartService.setAddedId.size) {\n      const all = this.cartService.getProductFromLocalStorage();\n      for (const item of all) {\n        this.cartService.addId(item._id);\n      }\n    }\n  }\n  togglePage(event): PageEvent {\n    this.loadProducts(event.pageSize, event.pageIndex);\n    return;\n  }\n}\n","<div class=\"container\">\n    <div class=\"categories-container\">\n      <mat-selection-list #categorycontainer>\n        <mat-list-option *ngFor=\"let category of categories\">\n          {{category.title}}\n        </mat-list-option>\n      </mat-selection-list>\n    </div>\n    <ul class=\"product-list\" *ngIf=\"products?.length > 0; else noItems\">\n      <li class=\"product-list-item\" *ngFor=\"let product of products\">\n        <figure>\n          <a routerLink=\"/products/{{product._id}}\">\n            <img [src]=\"product.imageUrl\" alt=\"productImage\" height=\"250\" width=\"250\">\n          </a>\n          <figcaption>\n            <h1 class=\"mat-h4 product-list-item-title\">{{product.title}}</h1>\n            <p>\n              <span class=\"mat-h1\" [matBadge]=\"product.price\" matBadgeOverlap=\"false\" matBadgeSize=\"medium\" *ngIf=\"product.discountPrice\">{{product.discountPrice}} ₴</span>\n            </p>\n            <h3 *ngIf=\"!product.discountPrice\" class=\"mat-h1\">{{product.price}} ₴</h3>\n            <p *ngIf=\"product.quantity > 10; else ending\" class=\"available\">Є в наявності</p>\n            <button mat-flat-button color=\"primary\"  (click)=\"addToCart(product)\" class=\"card-button\" *ngIf=\"!cartService.hasId(product._id); else added\">Додати в корзину</button>\n          </figcaption>\n        </figure>\n      </li>\n    </ul>\n</div>\n\n<div class=\"paginator-wrapper\" *ngIf=\"length\">\n  <mat-paginator #paginator\n                 [length]=\"length\"\n                 [pageSize]=\"pageSize\"\n                 [pageIndex]=\"pageIndex\"\n                 [pageSizeOptions]=\"[10, 25, 50, 100]\"\n                 (page)=\"pageEvent = togglePage($event)\">\n  </mat-paginator>\n</div>\n\n<ng-template #noItems>\n  <div class=\"spinner-wrapper\">\n    <mat-progress-spinner\n      class=\"example-margin\"\n      color=\"primary\"\n      mode=\"indeterminate\"\n      [value]=\"0\">\n    </mat-progress-spinner>\n  </div>\n</ng-template>\n<ng-template #ending>\n  <p class=\"noavailable\">Закінчується</p>\n</ng-template>\n<ng-template #added>\n  <button mat-flat-button color=\"warn\" (click)=\"addToCartInit('product')\" class=\"card-button\">Додано</button>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MyErrorStateMatcher} from '../header/header.component';\nimport {AuthService} from '../services/auth.service';\nimport {Respond} from '../models/Respond';\nimport {CommentsService} from '../services/comments.service';\n\n@Component({\n  selector: 'app-respond-popup',\n  templateUrl: './respond-popup.component.html',\n  styleUrls: ['./respond-popup.component.css']\n})\n\nexport class RespondPopupComponent implements OnInit {\n\n  @Output() toggleVisible = new EventEmitter();\n  @Input() commentId: string;\n\n  commentFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    private authService: AuthService,\n    private commentsService: CommentsService\n  ) { }\n\n  ngOnInit() {\n    this.emailFormControl.setValue(this.authService.getAuthStateFromLocalStorage().email);\n  }\n  toggleVisibleEmit() {\n    this.toggleVisible.emit();\n  }\n  doRespond(email, comment, name) {\n    const respond: Respond = {\n      email,\n      text: comment,\n      name,\n      commentId: this.commentId\n    };\n    this.commentsService.doRespond(respond)\n      .subscribe(data => {\n        console.log(data);\n        this.toggleVisibleEmit();\n      });\n  }\n}\n","<div class=\"respond-wrapper\">\r\n  <div class=\"respond-container\">\r\n    <div class=\"respond-container-header\">\r\n      <div>\r\n        <h1 class=\"mat-h1\">Написати відгук</h1>\r\n      </div>\r\n      <div (click)=\"toggleVisibleEmit()\">\r\n        <span class=\"burger\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"respond-container-content\">\r\n      <form>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваш відгук</mat-label>\r\n          <input matInput type=\"text\" [formControl]=\"commentFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"commentFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваше ім'я</mat-label>\r\n          <input matInput type=\"text\" [formControl]=\"nameFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"nameFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваш email</mat-label>\r\n          <input matInput type=\"email\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n            Вкажіть правильний email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button mat-flat-button color=\"primary\" class=\"send-button\" [disabled]=\"commentFormControl.hasError('required') ||\r\n            nameFormControl.hasError('required') || emailFormControl.hasError('email')\r\n              || emailFormControl.hasError('required')\" (click)=\"doRespond(\r\n                emailFormControl.value, commentFormControl.value,\r\n                nameFormControl.value)\">Відправити</button>\r\n        <button mat-flat-button color=\"warn\" (click)=\"toggleVisibleEmit()\">Скасувати</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Respond} from '../models/Respond';\n\n@Component({\n  selector: 'app-responds-list',\n  templateUrl: './responds-list.component.html',\n  styleUrls: ['./responds-list.component.css']\n})\nexport class RespondsListComponent implements OnInit {\n\n  @Input() responds: Array<Respond> = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"responds\">\r\n  <li class=\"responds-item\" *ngFor=\"let respond of responds\">\r\n    <div class=\"responds-item-header\">\r\n      <div>\r\n        <h2 class=\"mat-h2\">{{respond.name}}</h2>\r\n      </div>\r\n      <div>\r\n        <p>{{respond.date | date}}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"responds-item-content\">\r\n      <p>{{respond.text}}</p>\r\n    </div>\r\n  </li>\r\n</ul>\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {User} from '../models/User';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n\n  isAuthorized = this.getAuthStateFromLocalStorage().isAuth;\n\n  constructor(private http: HttpClient) {\n  }\n   signUp(user: User): Observable<User> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<User>('/api/auth/signup', user, httpOptions);\n  }\n  signIn(user: User): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<any>('/api/auth/signin', user, httpOptions);\n  }\n\n  setUser(user: User): void {\n    user.isAuth = true;\n    localStorage.setItem('auth', JSON.stringify(user));\n  }\n  getAuthStateFromLocalStorage() {\n    return JSON.parse(localStorage.getItem('auth') || '{}');\n  }\n\n  getAuthState(): Observable<boolean> {\n    return this.isAuthorized;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Product } from '../models/Product';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  items: Product[] = [];\n  cartProducts: Product[] = [];\n  prod: Product;\n  setAddedId = new Set();\n  private addToCartSubject$ = new BehaviorSubject<Product>(this.prod);\n  private removeFromCartSubject$ = new BehaviorSubject<Product>(this.prod);\n  addToCartChanged$ = this.addToCartSubject$.asObservable();\n  removeFromCartChanged$ = this.removeFromCartSubject$.asObservable();\n\n  constructor() {}\n\n  addToCart(product) {\n    product.orderQuantity = 1;\n    product.sum = 0;\n    console.log(product);\n    this.addToLocalStorage(product);\n    this.cartProducts = this.getProductFromLocalStorage();\n  }\n  addToLocalStorage(product) {\n    let identicElementsCounter = 0;\n    const all = this.getProductFromLocalStorage();\n    for (const item of all) {\n      if (item._id === product._id) {\n        identicElementsCounter++;\n      }\n    }\n    if (!identicElementsCounter) {\n      product.sum = this.calcSum(product);\n      all.push(product);\n      localStorage.setItem('products', JSON.stringify(all));\n    }\n  }\n  refreshLocalStorage(product) {\n    const all = this.getProductFromLocalStorage();\n    for (const item of all) {\n      if (item._id === product._id) {\n        item.orderQuantity = product.orderQuantity;\n        item.quantity = product.quantity;\n        item.sum = this.calcSum(item);\n      }\n    }\n    localStorage.setItem('products', JSON.stringify(all));\n  }\n  getProductFromLocalStorage() {\n    return JSON.parse(localStorage.getItem('products') || '[]');\n  }\n  addToCartEvent(product: Product) {\n    this.prod = product;\n    this.addToCartSubject$.next(product);\n  }\n  removeFromCartEvent(product: Product) {\n    this.prod = product;\n    this.removeFromCartSubject$.next(product);\n  }\n  hasId(id) {\n    return this.setAddedId.has(id);\n  }\n  addId(id) {\n    this.setAddedId.add(id);\n  }\n  removeId(id) {\n    this.setAddedId.delete(id);\n  }\n  increaseQuantity(product) {\n    for (const item of this.getProductFromLocalStorage()) {\n      if (item._id === product._id) {\n        if (item.quantity > 0) {\n          item.orderQuantity++;\n          item.quantity--;\n          this.refreshLocalStorage(item);\n        }\n      }\n    }\n  }\n  reduceQuantity(product) {\n    for (const item of this.getProductFromLocalStorage()) {\n      if (item._id === product._id) {\n        item.orderQuantity--;\n        item.quantity++;\n        this.refreshLocalStorage(item);\n      }\n    }\n  }\n  calcSum(item) {\n    return item.discountPrice ? item.orderQuantity * item.discountPrice : item.orderQuantity * item.price;\n  }\n  removeFromCart(product) {\n    localStorage.setItem('products', JSON.stringify(this.getProductFromLocalStorage().filter(i => i._id !== product._id)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Comment} from '../models/Comment';\nimport {HttpClient} from '@angular/common/http';\nimport {Respond} from '../models/Respond';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n\n  private doCommentSubject$ = new BehaviorSubject(false);\n  doCommentChanged$ = this.doCommentSubject$.asObservable();\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getComments(id): Observable<Comment[]> {\n    return this.http.post<Comment[]>('/api/load/comments', {id});\n  }\n  doComment(comment: Comment) {\n    return this.http.post<Comment>('/api/send/comment', comment);\n  }\n  doRespond(respond: Respond) {\n    return this.http.post<Respond>('/api/send/respond', respond);\n  }\n  doCommentEvent() {\n    this.doCommentSubject$.next(true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneralService {\n\n  error$ = new BehaviorSubject(false);\n\n  constructor() { }\n\n  getErrorState() {\n    return this.error$;\n  }\n\n  setError() {\n    this.error$.next(true);\n  }\n  unsetError() {\n    this.error$.next(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {NgProgress, NgProgressRef} from 'ngx-progressbar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgprogressService {\n\n  progressRef: NgProgressRef;\n\n  constructor(public ngProgress: NgProgress) {\n    this.progressRef = this.ngProgress.ref();\n  }\n\n  ngProgressStart() {\n    this.progressRef.start();\n  }\n  ngProgressComplete() {\n    this.progressRef.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Product} from '../models/Product';\nimport {filter} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  private node: Subject<any> = new BehaviorSubject<any>([]);\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  get node$() {\n    return this.node.asObservable().pipe(filter(node => !!node));\n  }\n  addNode(data: Product) {\n    this.node.next(data);\n  }\n  getProducts(pageSize, pageIndex): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const req = {pageSize, pageIndex};\n    return this.http.post<any>('/api/load/products', req, httpOptions);\n  }\n\n  getProduct(id): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const req = { id };\n    return this.http.post<any>('/api/load/product', req, httpOptions);\n  }\n  getCategories() {\n    return this.http.get<any>('/api/load/categories');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {AuthService} from '../services/auth.service';\nimport {User} from '../models/User';\nimport {Router} from '@angular/router';\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  user: User = {\n    email: null,\n    password: null,\n    userId: null,\n    token: null\n  };\n  constructor(\n    private authService: AuthService,\n    private route: Router\n  ) { }\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  passwordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5)\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  ngOnInit() {\n  }\n  signUp(email, password) {\n    this.user.email = email;\n    this.user.password = password;\n    console.log(this.user);\n    this.authService.signUp(this.user)\n      .subscribe(\n        data => {\n          if (data.token && data.userId) {\n            this.user.token = data.token;\n            this.user.userId = data.userId;\n            this.user.password = null;\n            this.authService.setUser(this.user);\n            this.route.navigate(['/']);\n          }\n        }\n      );\n  }\n\n}\n","<div class=\"form-wrapper\">\n  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Email</mat-label>\n      <input matInput [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\n      <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n        Вкажіть правильний email\n      </mat-error>\n      <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n        Це поле <strong>обов'язкове</strong>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Пароль</mat-label>\n      <input matInput type=\"password\" [formControl]=\"passwordFormControl\" [errorStateMatcher]=\"matcher\">\n      <mat-error *ngIf=\"passwordFormControl.hasError('required')\">\n        Це поле <strong>обов'язкове</strong>\n      </mat-error>\n      <mat-error *ngIf=\"passwordFormControl.hasError('minlength')\">\n        Пароль дуже <strong>короткий</strong>\n      </mat-error>\n    </mat-form-field>\n    <button mat-flat-button color=\"primary\"\n            [disabled]=\"passwordFormControl.hasError('minlength') || passwordFormControl.hasError('required')\n                || emailFormControl.hasError('required') || emailFormControl.hasError('email')\"\n              (click)=\"signUp(emailFormControl.value, passwordFormControl.value)\">Зареєструватися</button>\n  </form>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-to-order',\n  templateUrl: './to-order.component.html',\n  styleUrls: ['./to-order.component.css']\n})\nexport class ToOrderComponent implements OnInit {\n\n  checkoutForm\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) { \n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      email: ''\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  order(customerData) {\n    console.warn('Your order has been submited', customerData)\n    this.checkoutForm.reset()\n  }\n}\n","<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"order(checkoutForm.value)\">\n    <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" formControlName=\"email\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}