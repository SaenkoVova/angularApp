{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/all-info-product/all-info-product.component.ts","./src/app/all-info-product/all-info-product.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/characteristics-info-product/characteristics-info-product.component.ts","./src/app/characteristics-info-product/characteristics-info-product.component.html","./src/app/comments-info-product/comments-info-product.component.ts","./src/app/comments-info-product/comments-info-product.component.html","./src/app/guards/profile.guard.ts","./src/app/guards/signup.guard.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/photo-info-product/photo-info-product.component.ts","./src/app/photo-info-product/photo-info-product.component.html","./src/app/product-details/product-details.component.ts","./src/app/product-details/product-details.component.html","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/profile/profile.component.ts","./src/app/respond-popup/respond-popup.component.ts","./src/app/respond-popup/respond-popup.component.html","./src/app/responds-list/responds-list.component.ts","./src/app/responds-list/responds-list.component.html","./src/app/services/auth.service.ts","./src/app/services/cart.service.ts","./src/app/services/comments.service.ts","./src/app/services/general.service.ts","./src/app/services/ngprogress.service.ts","./src/app/services/products.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/to-order/to-order.component.ts","./src/app/to-order/to-order.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../services/products.service';\nimport { CartService } from '../services/cart.service';\n\n@Component({\n  selector: 'app-all-info-product',\n  templateUrl: './all-info-product.component.html',\n  styleUrls: ['./all-info-product.component.css']\n})\nexport class AllInfoProductComponent implements OnInit {\n\n  product;\n\n  constructor(\n   private route: ActivatedRoute,\n   private productsService: ProductsService,\n   public cartService: CartService,\n  ) { }\n\n  ngOnInit() {\n    this.getProduct();\n    this.addIdAfterReloading();\n  }\n  getProduct() {\n    this.productsService.node$.subscribe(n => this.product = n);\n  }\n  addToCart(product) {\n    if (!this.cartService.hasId(product._id)) {\n      this.cartService.addToCart(product);\n      this.cartService.addToCartEvent(product);\n    }\n    this.cartService.addId(product._id);\n  }\n  addToCartInit(product) {\n    this.cartService.addToCartEvent(product);\n  }\n  addIdAfterReloading() {\n    if (!this.cartService.setAddedId.size) {\n      const all = this.cartService.getProductFromLocalStorage();\n      for (const item of all) {\n        this.cartService.addId(item._id);\n      }\n    }\n  }\n}\n","<div *ngIf=\"product\" class=\"image-wrapper\">\n  <img [attr.src]=\"product?.imageUrl\" width=\"500\" height=\"auto\" alt=\"image\">\n  <div class=\"info\">\n    <p *ngIf=\"product.quantity > 10; else ending\" class=\"available\">\n      <mat-icon>done</mat-icon> Є в наявності\n    </p>\n    <ul class=\"info-actions\">\n      <li class=\"price\" class=\"mat-h1\">{{product.price}} ₴</li>\n      <li class=\"mat-h1\">{{product.discountPrice}} ₴</li>\n      <li>\n        <button mat-flat-button color=\"primary\"\n                (click)=\"addToCart(product)\" *ngIf=\"!cartService.hasId(product._id); else added\">\n          Купити<mat-icon>add_shopping_cart</mat-icon>\n        </button>\n      </li>\n      <li>\n        <button mat-flat-button color=\"primary\">\n          <mat-icon>favorite_border</mat-icon>\n        </button>\n      </li>\n    </ul>\n  </div>\n</div>\n      <!--<div *ngIf=\"product\">-->\n<!--    <img [attr.src]=\"product?.imageUrl\" width=\"400\" height=\"auto\" alt=\"\">-->\n<!--    <div class=\"details-dashboard\">-->\n<!--        <p *ngIf=\"product.quantity > 10; else ending\" class=\"available\">-->\n<!--            <fa-icon [icon] = \"faCloud\"></fa-icon> Є в наявності-->\n<!--        </p>-->\n<!--        <div class=\"actions\">-->\n<!--            <div class=\"price-badge\" *ngIf=\"product.discountPrice\">-->\n<!--                <h2 class=\"text-danger m-0\">{{product.discountPrice}} ₴</h2>-->\n<!--            </div>-->\n<!--            <div class=\"price-badge\" *ngIf=\"!product.discountPrice\">-->\n<!--               <h2 class=\"text-danger m-0\">{{product.price}} ₴</h2>-->\n<!--            </div>-->\n<!--            <div *ngIf=\"product.discountPrice\" class=\"price-info\">-->\n<!--                <h4 class=\"text-muted\">{{product.price}} ₴</h4>-->\n<!--            </div>-->\n<!--            <div class=\"buttons-badge\">-->\n<!--                <button (click)=\"addToCart(product)\" *ngIf=\"!cartService.hasId(product._id); else added\" >-->\n<!--                    <fa-icon [icon]=\"faCartPlus\"></fa-icon> Купити-->\n<!--                </button>-->\n<!--                <button class=\" btn add-to-favorites\">-->\n<!--                    <fa-icon [icon]=\"faHeart\"></fa-icon>-->\n<!--                </button>-->\n<!--            </div>-->\n<!--        </div>-->\n<!--    </div>-->\n<!--</div>-->\n\n<ng-template #ending>\n    <p class=\"noavailable\">Закінчується</p>\n</ng-template>\n<ng-template #added>\n    <button mat-flat-button color=\"primary\" (click)=\"addToCartInit('product')\">Товар вже в кошику</button>\n  </ng-template>\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductDetailsComponent } from './product-details/product-details.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { ToOrderComponent } from './to-order/to-order.component';\r\nimport { AllInfoProductComponent } from './all-info-product/all-info-product.component';\r\nimport { CharacteristicsInfoProductComponent } from './characteristics-info-product/characteristics-info-product.component';\r\nimport { PhotoInfoProductComponent } from './photo-info-product/photo-info-product.component';\r\nimport { CommentsInfoProductComponent } from './comments-info-product/comments-info-product.component';\r\nimport {SignupComponent} from './signup/signup.component';\r\nimport {SignupGuard} from './guards/signup.guard';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {ProfileGuard} from './guards/profile.guard';\r\n\r\nconst routes: Routes = [\r\n    {path: '', component: ProductListComponent},\r\n    {path: 'products/:id', component: ProductDetailsComponent, children: [\r\n        {path: '', component: AllInfoProductComponent, data: {path: ''}},\r\n        {path: 'characteristics', component: CharacteristicsInfoProductComponent, data: {path: 'characteristics'}},\r\n        {path: 'photo', component: PhotoInfoProductComponent, data: {path: 'photo'}},\r\n        {path: 'comments', component: CommentsInfoProductComponent, data: {path: 'comments'}},\r\n    ]},\r\n    {path: 'cart', component: CartComponent},\r\n    {path: 'signup', component: SignupComponent, canActivate: [SignupGuard]},\r\n    {path: 'order', component: ToOrderComponent},\r\n  {path: 'profile', component: ProfileComponent, canActivate: [ProfileGuard]}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingNodule {\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n}\n","<app-header></app-header>\n<ng-progress [color]=\"'#e67e22'\"\n             [thick]=\"true\"\n             [trickleSpeed]=\"500\"\n             [spinner]=\"false\"></ng-progress>\n<div class=\"container-fluid mt-5 p-5\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgProgressModule } from 'ngx-progressbar';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { CartComponent } from './cart/cart.component';\nimport { ToOrderComponent } from './to-order/to-order.component';\n\nimport { AllInfoProductComponent } from './all-info-product/all-info-product.component';\nimport { AppRoutingNodule } from './app-routing.module';\nimport { CharacteristicsInfoProductComponent } from './characteristics-info-product/characteristics-info-product.component';\nimport { PhotoInfoProductComponent } from './photo-info-product/photo-info-product.component';\nimport { CommentsInfoProductComponent } from './comments-info-product/comments-info-product.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatBadgeModule,\n  MatButtonModule, MatCardModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule, MatMenuModule, MatPaginatorModule, MatProgressSpinnerModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { SignupComponent } from './signup/signup.component';\nimport {AuthService} from './services/auth.service';\nimport { ProfileComponent } from './profile/profile.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTableModule} from '@angular/material/table';\nimport {RatingModule} from 'ng-starrating';\nimport { RespondPopupComponent } from './respond-popup/respond-popup.component';\nimport { RespondsListComponent } from './responds-list/responds-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ProductListComponent,\n    ProductDetailsComponent,\n    CartComponent,\n    ToOrderComponent,\n    AllInfoProductComponent,\n    CharacteristicsInfoProductComponent,\n    PhotoInfoProductComponent,\n    CommentsInfoProductComponent,\n    SignupComponent,\n    ProfileComponent,\n    RespondPopupComponent,\n    RespondsListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    RouterModule,\n    AppRoutingNodule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatBadgeModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    NgProgressModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatListModule,\n    MatTableModule,\n    RatingModule\n  ],\n  providers: [\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { CartService } from '../services/cart.service';\nimport { faCartPlus, faMinus, faPlus} from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\n\nexport class CartComponent implements OnInit {\n\n  @Output() toggleCartVisible = new EventEmitter();\n\n  faMinus = faMinus;\n  faPlus = faPlus;\n  faCartPlus = faCartPlus;\n  items = [];\n  sum = 0;\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit() {\n    this.items = this.cartService.getProductFromLocalStorage();\n    this.getFinallySum();\n  }\n  increaseQuantity(item) {\n    this.cartService.increaseQuantity(item);\n    this.items = this.cartService.getProductFromLocalStorage();\n    this.sum = 0;\n    this.getFinallySum();\n  }\n  reduceQuantity(item) {\n    this.cartService.reduceQuantity(item);\n    this.items = this.cartService.getProductFromLocalStorage();\n    this.sum = 0;\n    this.getFinallySum();\n  }\n  removeFromCart(product) {\n    this.cartService.removeFromCart(product);\n    this.items = this.cartService.getProductFromLocalStorage();\n    this.cartService.removeFromCartEvent(product);\n    this.cartService.removeId(product._id);\n    this.toggleCartVisible.emit();\n    this.sum = 0;\n    this.getFinallySum();\n  }\n  getFinallySum() {\n    for (const item of this.items) {\n      this.sum = item.sum + this.sum;\n    }\n  }\n}\n","<div class=\"cart-container\">\n    <div class=\"modal-window\">\n        <a class=\"modal-window-header-button\" (click)=\"toggleCartVisible.emit()\">\n            <h3 class=\"mat-h1\">Кошик</h3>\n            <span class=\"burger\"></span>\n        </a>\n        <div class=\"products-list-wrapper\" *ngIf=\"items.length > 0; else noProducts\">\n          <ul class=\"cart-product-list\">\n            <li class=\"cart-product-list-item\" *ngFor=\"let item of items\">\n              <button (click)=\"removeFromCart(item)\" class=\"mini-button-close-wraper\">\n                <span class=\"mini-button-close\"></span>\n              </button>\n              <img [src]=\"item.imageUrl\" alt=\"image\" width=\"150\" height=\"150\">\n              <div class=\"card-body-right\">\n                <a mat-button color=\"primary\" class=\"product-title\" routerLink=\"/products/{{item._id}}\" routerLinkActive=\"router-link-active\">\n                  {{item.title}}\n                </a>\n                <div class=\"card-body-right-control-panel\">\n                  <div class=\"price-badge\">\n                    <h5 class=\"mat-h1 m-0\" *ngIf=\"!item.discountPrice\">{{item.price}} грн</h5>\n                    <h5 class=\"mat-h1 m-0\" *ngIf=\"item.discountPrice\">{{item.discountPrice}} грн</h5>\n                  </div>\n                  <div class=\"quantity-badge\">\n                    <button class=\"quantity-badge-button\" [disabled]=\"item.orderQuantity == 1\" (click)=\"reduceQuantity(item)\">\n                      <fa-icon [icon]=\"faMinus\"></fa-icon>\n                    </button>\n                    <input type=\"text\" class=\"quantity-badge-input\" [value]=\"item.orderQuantity\">\n                    <button class=\"quantity-badge-button\" (click)=\"increaseQuantity(item)\">\n                      <fa-icon [icon]=\"faPlus\"></fa-icon>\n                    </button>\n                  </div>\n                  <div class=\"sum-badge\">\n                    <small class=\"sum-badge-title mat-h3\">Сума</small>\n                    <h5 class=\"mat-h2\">{{item.sum}}</h5>\n                  </div>\n                </div>\n              </div>\n            </li>\n          </ul>\n          <div class=\"modal-window-footer\">\n            <a mat-flat-button color=\"primary\" routerLink=\"/order\" (click)=\"toggleCartVisible.emit()\">До оплати</a>\n            <div class=\"mat-h1\">Загалом {{sum}}</div>\n          </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #noProducts>\n   <span class=\"cart-empty\">\n       <fa-icon [icon]=\"faCartPlus\" class=\"cart-empty-icon\"></fa-icon>\n        <p class=\"text-center text-muted pl-3 cart-empty-text\">Кошик порожній</p>\n   </span>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../services/products.service';\n\n@Component({\n  selector: 'app-characteristics-info-product',\n  templateUrl: './characteristics-info-product.component.html',\n  styleUrls: ['./characteristics-info-product.component.css']\n})\nexport class CharacteristicsInfoProductComponent implements OnInit {\n\n  product;\n  constructor(\n    private productsService: ProductsService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.getProduct();\n  }\n  getProduct() {\n    this.productsService.node$.subscribe(node => this.product = node);\n  }\n}\n","<div *ngIf=\"product\">\n  <p class=\"mat-h1 product-title\">Характеристики {{product.title}}</p>\n  <table class=\"table\">\n    <tbody>\n      <tr *ngFor=\"let item of product.characteristics\">\n        <td class=\"mat-h3\">{{item.title}}</td>\n        <td class=\"mat-h3\">{{item.value}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {StarRatingComponent} from 'ng-starrating';\nimport {CommentsService} from '../services/comments.service';\nimport {Comment} from '../models/Comment';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MyErrorStateMatcher} from '../header/header.component';\nimport {ProductsService} from '../services/products.service';\nimport {AuthService} from '../services/auth.service';\nimport {NgprogressService} from '../services/ngprogress.service';\n\n\n@Component({\n  selector: 'app-comments-info-product',\n  templateUrl: './comments-info-product.component.html',\n  styleUrls: ['./comments-info-product.component.css']\n})\nexport class CommentsInfoProductComponent implements OnInit {\n\n  comments: Comment[] = [];\n  comment: Comment;\n  product;\n  error: string;\n  rating = 0;\n  respondPopupVisible = false;\n  commentId;\n\n  commentFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    private commentsService: CommentsService,\n    private productsService: ProductsService,\n    private authService: AuthService,\n    private ngprogressService: NgprogressService,\n  ) { }\n\n  ngOnInit() {\n    this.getProduct();\n    this.emailFormControl.setValue(this.authService.getAuthStateFromLocalStorage().email);\n  }\n  onRate($event: {oldValue: number, newValue: number, starRating: StarRatingComponent}) {\n    this.rating = $event.newValue;\n  }\n\n  loadComments(id) {\n      this.commentsService.getComments(id)\n        .subscribe(\n          (comments) => {\n            this.comments = comments;\n          },\n          (error) => {\n            this.error = error;\n            console.log(this.error);\n          }\n        );\n  }\n  getProduct() {\n    this.productsService.node$.subscribe(node => {\n      this.product = node;\n      if (Object.keys(this.product).length) {\n        console.log(this.product._id);\n        this.loadComments(this.product._id);\n      }\n    });\n  }\n  doComment(comment, name) {\n    if (this.authService.getAuthStateFromLocalStorage().isAuth) {\n      this.ngprogressService.ngProgressStart();\n      this.comment = {\n        userId: this.authService.getAuthStateFromLocalStorage().userId || '',\n        productId: this.product._id,\n        username: name,\n        text: comment,\n        email: this.authService.getAuthStateFromLocalStorage().email || this.emailFormControl.value,\n        rating: this.rating,\n      };\n      this.commentsService.doComment(this.comment)\n        .subscribe(data => {\n          this.loadComments(this.product._id);\n          this.commentFormControl.setValue('');\n          this.nameFormControl.setValue('');\n          this.rating = 0;\n          this.ngprogressService.ngProgressComplete();\n        });\n    } else {\n      this.commentsService.doCommentEvent();\n    }\n  }\n  toggleVisible(commentId?) {\n    this.commentId = commentId;\n    this.respondPopupVisible = !this.respondPopupVisible;\n  }\n}\n","<app-respond-popup *ngIf=\"respondPopupVisible\" [commentId]=\"commentId\" (toggleVisible)=\"toggleVisible()\"></app-respond-popup>\r\n<div class=\"comments-wrapper\">\r\n  <div class=\"comment-body\">\r\n    <div>\r\n      <star-rating [value]=\"rating\" [totalstars]=\"5\" [checkedcolor]=\"'gold'\" [uncheckedcolor]=\"'black'\" [size]=\"'40px'\" [readonly]=\"false\" (rate)=\"onRate($event)\"></star-rating>\r\n    </div>\r\n    <div>\r\n      <form>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваш відгук</mat-label>\r\n          <input matInput type=\"text\" [formControl]=\"commentFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"commentFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваше ім'я</mat-label>\r\n          <input matInput type=\"text\" [formControl]=\"nameFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"nameFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваш email</mat-label>\r\n          <input matInput type=\"email\" [readonly]=\"\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n            Вкажіть правильний email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button mat-flat-button color=\"primary\" class=\"send-button\" [disabled]=\"commentFormControl.hasError('required') ||\r\n            nameFormControl.hasError('required') || emailFormControl.hasError('email')\r\n              || emailFormControl.hasError('required')\" (click)=\"doComment(commentFormControl.value, nameFormControl.value)\">Відправити</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <h1 class=\"mat-h1\">Усі відгуки</h1>\r\n  <ul class=\"comments\">\r\n    <li class=\"comments-item\" *ngFor=\"let comment of comments\">\r\n      <div class=\"comments-item-header\">\r\n        <div class=\"row\">\r\n          <mat-icon color=\"primary\">shopping_cart</mat-icon>\r\n          <h2 class=\"mat-h2\">{{comment.username}}</h2>\r\n        </div>\r\n        <div class=\"row\">\r\n          <p class=\"mat-h3 comment-date\">{{comment.date | date}}</p>\r\n          <mat-icon class=\"link-pointer\">report</mat-icon>\r\n        </div>\r\n      </div>\r\n      <div class=\"comments-item-content\">\r\n        <div>\r\n          <star-rating [value]=\"comment.rating\" [totalstars]=\"5\" [checkedcolor]=\"'gold'\" [uncheckedcolor]=\"'black'\" [size]=\"'40px'\" [readonly]=\"true\" (rate)=\"onRate($event)\"></star-rating>\r\n        </div>\r\n        <div>\r\n          <p class=\"mat-h3\">{{comment.text}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"comments-item-footer\">\r\n        <div class=\"row\" (click)=\"toggleVisible(comment._id)\">\r\n          <mat-icon class=\"link-pointer\">redo</mat-icon>\r\n          <p class=\"comment-answer link-pointer\">Відповісти</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <mat-icon class=\"link-pointer\">thumb_up</mat-icon>\r\n          <p class=\"likes-counter\">{{comment.likesCounter}}</p>\r\n          <mat-icon class=\"link-pointer\">thumb_down</mat-icon>\r\n          <p class=\"likes-counter\">{{comment.dislikesCounter}}</p>\r\n        </div>\r\n      </div>\r\n      <app-responds-list *ngIf=\"comment.responds.length\" [responds]=\"comment.responds\"></app-responds-list>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return new Observable<boolean>(observer => {\n      if(this.auth.getAuthStateFromLocalStorage().isAuth) {\n        observer.next(true);\n      } else {\n        observer.next(false);\n        this.router.navigate(['/signup']);\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return new Observable<boolean>(observer => {\n      if (this.authService.getAuthStateFromLocalStorage().isAuth) {\n        observer.next(false);\n        this.router.navigate(['/']);\n      } else {\n        observer.next(true);\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport {FormBuilder, FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { CartService } from '../services/cart.service';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {User} from '../models/User';\nimport {GeneralService} from '../services/general.service';\nimport {Router} from '@angular/router';\nimport {CommentsService} from '../services/comments.service';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  authVisible = false;\n  cartVisible = false;\n  error = null;\n  cartCouter;\n  isAuth = false;\n  constructor(\n    public auth: AuthService,\n    private cartService: CartService,\n    public generalService: GeneralService,\n    private router: Router,\n    private commentsService: CommentsService\n  ) {}\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  passwordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5)\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n  ngOnInit() {\n    this.observeForAddToCart();\n    this.observeForRemoveFromCart();\n    this.observeForDoCommentEvent();\n    this.isAuth = this.auth.getAuthStateFromLocalStorage().isAuth;\n  }\n\n  observeForAddToCart() {\n    this.cartService.addToCartChanged$.subscribe(data => {\n      this.cartCouter = this.cartService.getProductFromLocalStorage().length;\n      if (data !== undefined) {\n       this.toggleCartVisible();\n      }\n    });\n  }\n  observeForDoCommentEvent() {\n    this.commentsService.doCommentChanged$.subscribe(data => {\n      if (data === true) {\n        this.toggleAuthVisible();\n      }\n    });\n  }\n  observeForRemoveFromCart() {\n    this.cartService.removeFromCartChanged$.subscribe(data => {\n      this.cartCouter = this.cartService.getProductFromLocalStorage().length;\n      if (data !== undefined) {\n       this.toggleCartVisible();\n      }\n    });\n  }\n  toggleAuthVisible() {\n    this.authVisible = !this.authVisible;\n  }\n  toggleCartVisible() {\n    this.cartVisible = !this.cartVisible;\n  }\n  signIn(email, password) {\n    this.generalService.unsetError();\n    let user: User = {\n      email,\n      password,\n      userId: null,\n      token: null\n    };\n    this.auth.signIn(user)\n      .subscribe(data => {\n          user = {\n            email,\n            password: null,\n            userId: data.userId,\n            token: data.token\n          };\n          this.auth.setUser(user);\n          this.toggleAuthVisible();\n          this.isAuth = this.auth.getAuthStateFromLocalStorage();\n      },\n      error => {\n        this.generalService.setError();\n        this.error = error.error.message;\n      });\n  }\n}\n","<header class=\"header\">\n  <app-cart *ngIf=\"cartVisible\" (toggleCartVisible)=\"toggleCartVisible()\"></app-cart>\n  <div class=\"modal-window-background\" *ngIf=\"authVisible\">\n    <div class=\"modal-window\">\n      <div class=\"modal-window-header\">\n        <h3>Вхід</h3>\n        <button class=\"modal-window-header-button\" (click)=\"toggleAuthVisible();\" aria-label=\"Закрити модальне вікно\">\n          <span class=\"burger\"></span>\n        </button>\n      </div>\n      <div class=\"modal-window-body\">\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Email</mat-label>\n            <input matInput [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\n            <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n              Вкажіть правильний email\n            </mat-error>\n            <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>Пароль</mat-label>\n            <input matInput type=\"password\" [formControl]=\"passwordFormControl\" [errorStateMatcher]=\"matcher\">\n            <mat-error *ngIf=\"passwordFormControl.hasError('required')\">\n              Це поле <strong>обов'язкове</strong>\n            </mat-error>\n            <mat-error *ngIf=\"passwordFormControl.hasError('minlength')\">\n              Пароль дуже <strong>короткий</strong>\n            </mat-error>\n          </mat-form-field>\n          <mat-error *ngIf=\"generalService.getErrorState() | async\">\n            {{error}}\n          </mat-error>\n          <button mat-flat-button color=\"primary\"\n                  [disabled]=\"passwordFormControl.hasError('minlength') || passwordFormControl.hasError('required')\n                || emailFormControl.hasError('required') || emailFormControl.hasError('email')\"\n                  (click)=\"signIn(emailFormControl.value, passwordFormControl.value)\">Увійти</button>\n        </form>\n        <a routerLink=\"signup\" routerLinkActive=\"router-link-active\" class=\"signup\" (click)=\"toggleAuthVisible()\">Зареєструватися</a>\n      </div>\n    </div>\n  </div>\n\n  <mat-toolbar color=\"primary\" class=\"toolbar\">\n    <button mat-button routerLink=\"/\">\n      <mat-icon>accessibility_new</mat-icon>\n      <span>My Application</span>\n    </button>\n    <span class=\"fill-remaining-space\"></span>\n\n    <button mat-icon-button (click)=\"toggleCartVisible()\">\n      <mat-icon\n        [matBadge]=\"cartCouter\"\n        matBadgePosition=\"above after\"\n        matBadgeColor=\"warn\">add_shopping_cart\n      </mat-icon>\n    </button>\n\n    <button mat-icon-button>\n      <mat-icon>bookmark</mat-icon>\n    </button>\n\n    <button mat-button routerLink=\"/profile\" *ngIf=\"isAuth; else login\">\n      <mat-icon>account_circle</mat-icon>\n      <span>Особистий кабінет</span>\n    </button>\n  </mat-toolbar>\n</header>\n\n<ng-template #login>\n  <button mat-icon-button (click)=\"toggleAuthVisible()\">\n    <mat-icon>account_circle</mat-icon>\n  </button>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {ProductsService} from '../services/products.service';\n\n@Component({\n  selector: 'app-photo-info-product',\n  templateUrl: './photo-info-product.component.html',\n  styleUrls: ['./photo-info-product.component.css']\n})\nexport class PhotoInfoProductComponent implements OnInit {\n\n  product;\n  imageIndex = 0;\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit() {\n    this.getProduct();\n  }\n  getProduct() {\n    this.productsService.node$.subscribe(node => this.product = node);\n  }\n\n}\n","<div *ngIf=\"product\">\n  <div class=\"products-wrapper\">\n    <div *ngFor=\"let item of product.images\" class=\"image-wrapper\">\n      <img [src]=\"item\" alt=\"image\" width=\"100%\" height=\"auto\">\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { ProductsService } from '../services/products.service';\nimport {Product} from '../models/Product';\nimport {NgprogressService} from '../services/ngprogress.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\n\nexport class ProductDetailsComponent implements OnInit {\n\n  public product: Product = {\n    _id: null,\n    title: null,\n    price: null,\n    discountPrice: null,\n    imageUrl: null,\n    quantity: null\n  };\n  navigateItems = [\n    {\n      id: 1,\n      title: 'Усе про товар',\n      path: '/',\n      active: false\n    },\n    {\n      id: 2,\n      title: 'Характеристики',\n      path: 'characteristics',\n      active: false\n    },\n    {\n      id: 3,\n      title: 'Фото',\n      path: 'photo',\n      active: false\n    },\n    {\n      id: 4,\n      title: 'Відгуки',\n      path: 'comments',\n      active: false\n    }\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private productsService: ProductsService,\n    private ngprogressService: NgprogressService\n  ) { }\n\n  ngOnInit() {\n    this.getProduct();\n    this.getActiveTab();\n  }\n  getProduct() {\n    this.ngprogressService.ngProgressStart();\n    this.route.params.subscribe(params => {\n      const id = params.id;\n      this.productsService.getProduct(id).subscribe(data => {\n        this.product = data;\n        this.productsService.addNode(data);\n        this.ngprogressService.ngProgressComplete();\n      });\n    });\n  }\n  getActiveTab() {\n    this.route.url.subscribe(() => {\n      console.log(this.route.snapshot.firstChild.data);\n      const childPath = this.route.snapshot.firstChild.data;\n      if (childPath.path === '') {\n        this.toggleTabActive(1);\n      }\n      if (childPath.path === 'characteristics') {\n        this.toggleTabActive(2);\n      }\n      if (childPath.path === 'photo') {\n        this.toggleTabActive(3);\n      }\n      if (childPath.path === 'comments') {\n        this.toggleTabActive(4);\n      }\n    });\n  }\n  toggleTabActive(id) {\n    for (const navigateItem of this.navigateItems) {\n      navigateItem.id === id ? navigateItem.active = true : navigateItem.active = false;\n    }\n  }\n}\n","<div *ngIf=\"product\">\n    <div>\n        <h1 class=\"mat-headline product-title\">{{product.title}}</h1>\n        <ul class=\"actions\">\n            <li *ngFor=\"let item of navigateItems\" class=\"actions-item\">\n                <a routerLink =\"/products/{{product._id}}/{{item.path}}\" routerLinkActive=\"router-link-active\"\n                    class=\"actions-item-link\" [class.active]=\"item.active\" (click)=\"toggleTabActive(item.id)\">{{item.title}}</a>\n            </li>\n        </ul>\n        <router-outlet></router-outlet>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../services/cart.service';\nimport { ProductsService } from '../services/products.service';\nimport { Product } from '../models/Product';\nimport {PageEvent} from '@angular/material/paginator';\nimport {NgprogressService} from '../services/ngprogress.service';\n\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\n\nexport class ProductListComponent implements OnInit {\n\n  products: Product[] = [];\n  length;\n  pageSize = 10;\n  pageIndex = 0;\n  pageEvent: PageEvent;\n  categories = [];\n\n  constructor(\n    private productsService: ProductsService,\n    public cartService: CartService,\n    private ngprogressService: NgprogressService) { }\n\n  ngOnInit() {\n    this.loadProducts(this.pageSize, this.pageIndex);\n    this.addIdAfterReloading();\n  }\n\n  loadProducts(pageSize, pageIndex) {\n    this.ngprogressService.ngProgressComplete();\n    this.ngprogressService.ngProgressStart();\n    this.productsService.getProducts(pageSize, pageIndex)\n      .subscribe(data => {\n        this.products = data.array;\n        this.loadCategories();\n        this.length = data.length;\n        this.ngprogressService.ngProgressComplete();\n      });\n  }\n  loadCategories() {\n    this.productsService.getCategories()\n      .subscribe( categories => {\n        this.categories = categories;\n      });\n  }\n  addToCart(product) {\n    if (!this.cartService.hasId(product._id)) {\n      this.cartService.addToCart(product);\n      this.cartService.addToCartEvent(product);\n    }\n    this.cartService.addId(product._id);\n  }\n  addToCartInit(product) {\n    this.cartService.addToCartEvent(product);\n  }\n  addIdAfterReloading() {\n    if (!this.cartService.setAddedId.size) {\n      const all = this.cartService.getProductFromLocalStorage();\n      for (const item of all) {\n        this.cartService.addId(item._id);\n      }\n    }\n  }\n  togglePage(event): PageEvent {\n    this.loadProducts(event.pageSize, event.pageIndex);\n    return;\n  }\n}\n","<div class=\"container\">\n    <div class=\"categories-container\">\n      <mat-selection-list #categorycontainer>\n        <mat-list-option *ngFor=\"let category of categories\">\n          {{category.title}}\n        </mat-list-option>\n      </mat-selection-list>\n    </div>\n    <ul class=\"product-list\" *ngIf=\"products?.length > 0; else noItems\">\n      <li class=\"product-list-item\" *ngFor=\"let product of products\">\n        <figure>\n          <a routerLink=\"/products/{{product._id}}\">\n            <img [src]=\"product.imageUrl\" alt=\"productImage\" height=\"250\" width=\"250\">\n          </a>\n          <figcaption>\n            <h1 class=\"mat-h4 product-list-item-title\">{{product.title}}</h1>\n            <p>\n              <span class=\"mat-h1\" [matBadge]=\"product.price\" matBadgeOverlap=\"false\" matBadgeSize=\"medium\" *ngIf=\"product.discountPrice\">{{product.discountPrice}} ₴</span>\n            </p>\n            <h3 *ngIf=\"!product.discountPrice\" class=\"mat-h1\">{{product.price}} ₴</h3>\n            <p *ngIf=\"product.quantity > 10; else ending\" class=\"available\">Є в наявності</p>\n            <button mat-flat-button color=\"primary\"  (click)=\"addToCart(product)\" class=\"card-button\" *ngIf=\"!cartService.hasId(product._id); else added\">Додати в корзину</button>\n          </figcaption>\n        </figure>\n      </li>\n    </ul>\n</div>\n\n<div class=\"paginator-wrapper\" *ngIf=\"length\">\n  <mat-paginator #paginator\n                 [length]=\"length\"\n                 [pageSize]=\"pageSize\"\n                 [pageIndex]=\"pageIndex\"\n                 [pageSizeOptions]=\"[10, 25, 50, 100]\"\n                 (page)=\"pageEvent = togglePage($event)\">\n  </mat-paginator>\n</div>\n\n<ng-template #noItems>\n  <div class=\"spinner-wrapper\">\n    <mat-progress-spinner\n      class=\"example-margin\"\n      color=\"primary\"\n      mode=\"indeterminate\"\n      [value]=\"0\">\n    </mat-progress-spinner>\n  </div>\n</ng-template>\n<ng-template #ending>\n  <p class=\"noavailable\">Закінчується</p>\n</ng-template>\n<ng-template #added>\n  <button mat-flat-button color=\"warn\" (click)=\"addToCartInit('product')\" class=\"card-button\">Додано</button>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MyErrorStateMatcher} from '../header/header.component';\nimport {AuthService} from '../services/auth.service';\nimport {Respond} from '../models/Respond';\nimport {CommentsService} from '../services/comments.service';\n\n@Component({\n  selector: 'app-respond-popup',\n  templateUrl: './respond-popup.component.html',\n  styleUrls: ['./respond-popup.component.css']\n})\n\nexport class RespondPopupComponent implements OnInit {\n\n  @Output() toggleVisible = new EventEmitter();\n  @Input() commentId: string;\n\n  commentFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  nameFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    private authService: AuthService,\n    private commentsService: CommentsService\n  ) { }\n\n  ngOnInit() {\n    this.emailFormControl.setValue(this.authService.getAuthStateFromLocalStorage().email);\n  }\n  toggleVisibleEmit() {\n    this.toggleVisible.emit();\n  }\n  doRespond(email, comment, name) {\n    const respond: Respond = {\n      email,\n      text: comment,\n      name,\n      commentId: this.commentId\n    };\n    this.commentsService.doRespond(respond)\n      .subscribe(data => {\n        console.log(data);\n        this.toggleVisibleEmit();\n      });\n  }\n}\n","<div class=\"respond-wrapper\">\r\n  <div class=\"respond-container\">\r\n    <div class=\"respond-container-header\">\r\n      <div>\r\n        <h1 class=\"mat-h1\">Написати відгук</h1>\r\n      </div>\r\n      <div (click)=\"toggleVisibleEmit()\">\r\n        <span class=\"burger\"></span>\r\n      </div>\r\n    </div>\r\n    <div class=\"respond-container-content\">\r\n      <form>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваш відгук</mat-label>\r\n          <input matInput type=\"text\" [formControl]=\"commentFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"commentFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваше ім'я</mat-label>\r\n          <input matInput type=\"text\" [formControl]=\"nameFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"nameFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"input-field\" appearance=\"fill\" [floatLabel]=\"true\">\r\n          <mat-label>Ваш email</mat-label>\r\n          <input matInput type=\"email\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n            Вкажіть правильний email\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n            Це поле <strong>обов'язкове</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button mat-flat-button color=\"primary\" class=\"send-button\" [disabled]=\"commentFormControl.hasError('required') ||\r\n            nameFormControl.hasError('required') || emailFormControl.hasError('email')\r\n              || emailFormControl.hasError('required')\" (click)=\"doRespond(\r\n                emailFormControl.value, commentFormControl.value,\r\n                nameFormControl.value)\">Відправити</button>\r\n        <button mat-flat-button color=\"warn\" (click)=\"toggleVisibleEmit()\">Скасувати</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Respond} from '../models/Respond';\n\n@Component({\n  selector: 'app-responds-list',\n  templateUrl: './responds-list.component.html',\n  styleUrls: ['./responds-list.component.css']\n})\nexport class RespondsListComponent implements OnInit {\n\n  @Input() responds: Array<Respond> = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"responds\">\r\n  <li class=\"responds-item\" *ngFor=\"let respond of responds\">\r\n    <div class=\"responds-item-header\">\r\n      <div>\r\n        <h2 class=\"mat-h2\">{{respond.name}}</h2>\r\n      </div>\r\n      <div>\r\n        <p>{{respond.date | date}}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"responds-item-content\">\r\n      <p>{{respond.text}}</p>\r\n    </div>\r\n  </li>\r\n</ul>\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {User} from '../models/User';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n\n  isAuthorized = this.getAuthStateFromLocalStorage().isAuth;\n\n  constructor(private http: HttpClient) {\n  }\n   signUp(user: User): Observable<User> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<User>('/api/auth/signup', user, httpOptions);\n  }\n  signIn(user: User): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<any>('/api/auth/signin', user, httpOptions);\n  }\n\n  setUser(user: User): void {\n    user.isAuth = true;\n    localStorage.setItem('auth', JSON.stringify(user));\n  }\n  getAuthStateFromLocalStorage() {\n    return JSON.parse(localStorage.getItem('auth') || '{}');\n  }\n\n  getAuthState(): Observable<boolean> {\n    return this.isAuthorized;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Product } from '../models/Product';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  items: Product[] = [];\n  cartProducts: Product[] = [];\n  prod: Product;\n  setAddedId = new Set();\n  private addToCartSubject$ = new BehaviorSubject<Product>(this.prod);\n  private removeFromCartSubject$ = new BehaviorSubject<Product>(this.prod);\n  addToCartChanged$ = this.addToCartSubject$.asObservable();\n  removeFromCartChanged$ = this.removeFromCartSubject$.asObservable();\n\n  constructor() {}\n\n  addToCart(product) {\n    product.orderQuantity = 1;\n    product.sum = 0;\n    console.log(product);\n    this.addToLocalStorage(product);\n    this.cartProducts = this.getProductFromLocalStorage();\n  }\n  addToLocalStorage(product) {\n    let identicElementsCounter = 0;\n    const all = this.getProductFromLocalStorage();\n    for (const item of all) {\n      if (item._id === product._id) {\n        identicElementsCounter++;\n      }\n    }\n    if (!identicElementsCounter) {\n      product.sum = this.calcSum(product);\n      all.push(product);\n      localStorage.setItem('products', JSON.stringify(all));\n    }\n  }\n  refreshLocalStorage(product) {\n    const all = this.getProductFromLocalStorage();\n    for (const item of all) {\n      if (item._id === product._id) {\n        item.orderQuantity = product.orderQuantity;\n        item.quantity = product.quantity;\n        item.sum = this.calcSum(item);\n      }\n    }\n    localStorage.setItem('products', JSON.stringify(all));\n  }\n  getProductFromLocalStorage() {\n    return JSON.parse(localStorage.getItem('products') || '[]');\n  }\n  addToCartEvent(product: Product) {\n    this.prod = product;\n    this.addToCartSubject$.next(product);\n  }\n  removeFromCartEvent(product: Product) {\n    this.prod = product;\n    this.removeFromCartSubject$.next(product);\n  }\n  hasId(id) {\n    return this.setAddedId.has(id);\n  }\n  addId(id) {\n    this.setAddedId.add(id);\n  }\n  removeId(id) {\n    this.setAddedId.delete(id);\n  }\n  increaseQuantity(product) {\n    for (const item of this.getProductFromLocalStorage()) {\n      if (item._id === product._id) {\n        if (item.quantity > 0) {\n          item.orderQuantity++;\n          item.quantity--;\n          this.refreshLocalStorage(item);\n        }\n      }\n    }\n  }\n  reduceQuantity(product) {\n    for (const item of this.getProductFromLocalStorage()) {\n      if (item._id === product._id) {\n        item.orderQuantity--;\n        item.quantity++;\n        this.refreshLocalStorage(item);\n      }\n    }\n  }\n  calcSum(item) {\n    return item.discountPrice ? item.orderQuantity * item.discountPrice : item.orderQuantity * item.price;\n  }\n  removeFromCart(product) {\n    localStorage.setItem('products', JSON.stringify(this.getProductFromLocalStorage().filter(i => i._id !== product._id)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Comment} from '../models/Comment';\nimport {HttpClient} from '@angular/common/http';\nimport {Respond} from '../models/Respond';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n\n  private doCommentSubject$ = new BehaviorSubject(false);\n  doCommentChanged$ = this.doCommentSubject$.asObservable();\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getComments(id): Observable<Comment[]> {\n    return this.http.post<Comment[]>('/api/load/comments', {id});\n  }\n  doComment(comment: Comment) {\n    return this.http.post<Comment>('/api/send/comment', comment);\n  }\n  doRespond(respond: Respond) {\n    return this.http.post<Respond>('/api/send/respond', respond);\n  }\n  doCommentEvent() {\n    this.doCommentSubject$.next(true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneralService {\n\n  error$ = new BehaviorSubject(false);\n\n  constructor() { }\n\n  getErrorState() {\n    return this.error$;\n  }\n\n  setError() {\n    this.error$.next(true);\n  }\n  unsetError() {\n    this.error$.next(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {NgProgress, NgProgressRef} from 'ngx-progressbar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgprogressService {\n\n  progressRef: NgProgressRef;\n\n  constructor(public ngProgress: NgProgress) {\n    this.progressRef = this.ngProgress.ref();\n  }\n\n  ngProgressStart() {\n    this.progressRef.start();\n  }\n  ngProgressComplete() {\n    this.progressRef.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Product} from '../models/Product';\nimport {filter} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  private node: Subject<any> = new BehaviorSubject<any>([]);\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  get node$() {\n    return this.node.asObservable().pipe(filter(node => !!node));\n  }\n  addNode(data: Product) {\n    this.node.next(data);\n  }\n  getProducts(pageSize, pageIndex): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const req = {pageSize, pageIndex};\n    return this.http.post<any>('/api/load/products', req, httpOptions);\n  }\n\n  getProduct(id): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    const req = { id };\n    return this.http.post<any>('/api/load/product', req, httpOptions);\n  }\n  getCategories() {\n    return this.http.get<any>('/api/load/categories');\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {AuthService} from '../services/auth.service';\nimport {User} from '../models/User';\nimport {Router} from '@angular/router';\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  user: User = {\n    email: null,\n    password: null,\n    userId: null,\n    token: null\n  };\n  constructor(\n    private authService: AuthService,\n    private route: Router\n  ) { }\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n  passwordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(5)\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  ngOnInit() {\n  }\n  signUp(email, password) {\n    this.user.email = email;\n    this.user.password = password;\n    console.log(this.user);\n    this.authService.signUp(this.user)\n      .subscribe(\n        data => {\n          if (data.token && data.userId) {\n            this.user.token = data.token;\n            this.user.userId = data.userId;\n            this.user.password = null;\n            this.authService.setUser(this.user);\n            this.route.navigate(['/']);\n          }\n        }\n      );\n  }\n\n}\n","<div class=\"form-wrapper\">\n  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Email</mat-label>\n      <input matInput [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\n      <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\n        Вкажіть правильний email\n      </mat-error>\n      <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n        Це поле <strong>обов'язкове</strong>\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Пароль</mat-label>\n      <input matInput type=\"password\" [formControl]=\"passwordFormControl\" [errorStateMatcher]=\"matcher\">\n      <mat-error *ngIf=\"passwordFormControl.hasError('required')\">\n        Це поле <strong>обов'язкове</strong>\n      </mat-error>\n      <mat-error *ngIf=\"passwordFormControl.hasError('minlength')\">\n        Пароль дуже <strong>короткий</strong>\n      </mat-error>\n    </mat-form-field>\n    <button mat-flat-button color=\"primary\"\n            [disabled]=\"passwordFormControl.hasError('minlength') || passwordFormControl.hasError('required')\n                || emailFormControl.hasError('required') || emailFormControl.hasError('email')\"\n              (click)=\"signUp(emailFormControl.value, passwordFormControl.value)\">Зареєструватися</button>\n  </form>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-to-order',\n  templateUrl: './to-order.component.html',\n  styleUrls: ['./to-order.component.css']\n})\nexport class ToOrderComponent implements OnInit {\n\n  checkoutForm\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) { \n    this.checkoutForm = this.formBuilder.group({\n      name: '',\n      email: ''\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  order(customerData) {\n    console.warn('Your order has been submited', customerData)\n    this.checkoutForm.reset()\n  }\n}\n","<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"order(checkoutForm.value)\">\n    <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" formControlName=\"email\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}